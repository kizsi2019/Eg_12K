@startuml

skin rose

title Class - "Nyami menüztetés"


class Form



class MainForm{
  + MainForm()
}

class Nevjegy{
  + Nevjegy(Form mainform)
  + String AssemblyTitle
  + String AssemblyVersion
  + String AssemblyDescription
  + String AssemblyProduct
  + String AssemblyCopyright
  + String AssemblyCompany
}

MainForm <|-- Form
Nevjegy <|-- Form


class Panel

class "myGroup.cs" as group1

package group1 <<rectangle>>{
  class MyGroup{
    - Label title
    - Label leves
    + Label levestxt
    - Label foetel
    + Label foeteltxt
    + NumericUpDown count
    + TextBox price
    + Inner myInner
    + MyGroup()
    + MyGroup(Int y, String menu, String price1, String price2, String _leves, String _foetel)
    + void SetCountClick(Form form)
    + void ValueChange()
    + Int ToPay()
  }

  class Inner{
    + RadioButton radio1
    + RadioButton radio2
    - String price1
    - String price2
    + Inner()
    + Inner(String _price1, String _price2)
    + Int GetPrice1()
    + Int GetPrice2()
    + Bool OneChoosen()
    + String Choosen()
  }
}

MyGroup <|-- Panel
Inner <|-- Panel


struct Items{
    + String id
    + String name
    + String cat
    + Int price
    + Items(String _id, String _name, String _cat, Decimal _price)
    + Items(String _id, String _name, String _cat, String _price)
}
struct Menu{
    + Int pricetelj
    + Double pricezona
    + String name1
    + String name2
    + Menu(Int _price1, Int _price2, String _name1, String _name2)
}

struct Rendelesek{
  + Int id
  + Int price
  + DateTime date
  + Bool elvitel
  + Rendelesek(Decimal _id, Decimal _price, String _date, Decimal _elvitel)
}

interface IPersistence{
  + void ReadRend()
  + void AddElem(Int price, DateTime date, Bool elvitel)
  + void DeleteElem(Int id)
  + void ClearAll()
  + List<Items> GetData()
}

class Persistence{
  - Int idcount
  + List<Rendelesek> myRend
  - String connectionstring
  + Persistence()
  - void CreateDatabase()
  - void CreateTable1()
  - void CreateTable2()
  + void ReadRend()
  + void AddElem(Int price, DateTime date, Bool elvitel)
  + void DeleteElem(Int id)
  + void ClearAll()
  + List<Items> GetData()
  - void ReadFromFile()
}

Persistence <|-- IPersistence

interface IModel{
  + List<Rendelesek> GiveData
  + String DataChange(Int price1, Int price2, Bool elvitel)
  + void Frissites()
  + Menu GetNapiMenu()
  + void Rendeles(String priceTxt, Bool elvitel)
  + Rendelesek GetLine(Int index)
  + void ClearAll(ListBox elemek)
  + void Delete(Int index)
}

class Model{
  - Persistence dataset
  - List<Items> myData
  + Model()
  + List<Rendelesek> GiveData()
  + String DataChange(Int price1, Int price2, Bool elvitel)
  + void Frissites()
  + menu GetNapiMenu()
  + void Rendeles(String priceTxt, Bool elvitel)
  + Rendelesek GetLine(Int index)
  + void ClearAll(ListBox elemek)
  + void Delete(Int index)
}

class View{
  + Model mod
  - MyGroup group1
  - MyGroup group2
  - TextBox payUpt
  + CheckBox elvitel
  - ListBox elemek
  - View view
  - TextBox bevetelIpt
  + List<Rendelesek> myData
  - void SetUp(Form myForm)
  - void SetUpMenu(Form myFor, TabPage menu)
  - void SetUpRendelesek(Form myForm, TabPage rendelesek)
  + void Rendeles()
  + void FillList(ListBox lb, TextBox bevetel)
  + void ClearAll(ListBox elemek)
  - void ClearPage(MyGroup group1, MyGroup group2, CheckBox elvitel)

}

Model <|-- IModel

@enduml